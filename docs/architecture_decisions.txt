The system core functionality is sending a streams of location data and for handling the load of these stream of messages that should be persisted by a  microservice, Kafka is a good option because it avoids losing messages during the down time of the MS which guaranty more the write operation will often be successful

For decoupling the system internally a communications between services needed to be handled and all message passing techniques can fit with the situation but differently while in gRPC we communicate directly to microservices in a similar way we would do with REST but the performance is a lot faster since we are using a binary protocol based on http2, also the data more structured and this can be used to synchronize data between different microservices, in the other hand with kafka we will have more latency because we should post an event that has a B as a subscriber, then the B should post the response with A as a subscriber. While gRPC's approach is much more direct, as the queue can take much longer to get from A to B, and back.