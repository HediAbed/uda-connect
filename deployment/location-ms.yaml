apiVersion: v1
kind: Service
metadata:
  labels:
    service: location-ms
  name: location-ms
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
    nodePort: 30003
  - name: "5005"
    port: 5005
    nodePort: 30004
  selector:
    service: location-ms
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: location-ms
  name: location-ms
spec:
  replicas: 1
  selector:
    matchLabels:
      service: location-ms
  template:
    metadata:
      labels:
        service: location-ms
    spec:
      containers:
      - image: hediabed/location_ms:v1.0.4
        name: location-ms
        imagePullPolicy: Always
        ports:
          - containerPort: 5000
          - containerPort: 5005
        env:
        - name: RPC_PERSON_SERVER
          value: person-ms
        - name: RPC_PERSON_PORT
          value: "5005"
        - name: TOPIC_LOCATION
          value: location_events
        - name: KAFKA_SERVER
          value: uda-connect-kafka:9092
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: location-db-env
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: location-db-secret
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: location-db-env
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: location-db-env
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: location-db-env
              key: DB_PORT
      # initContainers:
      # - name: initserviceforkafka
      #   image: nginx
      #   command: ['sh', '-c', 'until ping uda-connect-kafka -c 4; do echo waiting for kafka pods; sleep 5; done']
      restartPolicy: Always
